!
!  MMS file to build MX distribution kits
!

MG_NATIVE = 1
MX_FACILITY = KIT
.INCLUDE [-]MMSDEFS.MMS

KITNAME = MX061

.suffixes :
.suffixes : .COM .TXT .SDML .TEMPLATE .COM~ .TXT~ .SDML~ .TEMPLATE~

.TEMPLATE~.TEMPLATE :
	@ IF "$(MMS$CMS_LIBRARY)" .NES. "" THEN DEFINE/USER CMS$LIB $(MMS$CMS_LIBRARY)
	$(CMS) FETCH $(MMS$CMS_ELEMENT) /OUTPUT=$(MMS$TARGET_NAME).TEMPLATE $(CMSFLAGS) $(CMSCOMMENT)
{$(CMSDIR)}.TEMPLATE~{$(SRCDIR)}.TEMPLATE :
{$(CMSDIR)}.TEMPLATE~{}.TEMPLATE :

! This has been deliberately shortened to cope with DCL command length limitations when
! building the documentation saveset.
!
BACKUP = BAC/INT/BL=8192

.IFDEF DEV
.IFDEF DEVQ
.ELSE
DEVQ = /SA
.ENDIF
.ELSE
DEV = $(KITDIR) 
DEVQ = /SA
.ENDIF

ALWAYS_MAKE :   ! fake target to trigger a make on every pass

FETCH :    AAAREADME.TXT,-
    COMPRESS_OLBS.COM,-
    FILESERV_HELP.TXT,-
    KITINSTAL.COM,-
    MAKE_FIXUPS.COM,-
    MAKE_IMAGE_LIST.COM,-
    MAKE_MX_DOC_LIST.COM,-
    MAKE_README.COM,-
    MAKE_ZIPNOTE.COM,-
    MLF_CONFIG.COM,-
    MLIST_ADD_MESSAGE.TEMPLATE,-
    MLIST_ADD_MESSAGE.TXT,-
    MLIST_CONFIRM_MESSAGE.TEMPLATE,-
    MLIST_CONFIRM_MESSAGE.TXT,-
    MLIST_FORWARD_MESSAGE.TEMPLATE,-
    MLIST_FORWARD_MESSAGE.TXT,-
    MLIST_HELP.TEMPLATE,-
    MLIST_HELP.TXT,-
    MLIST_REMOVE_MESSAGE.TEMPLATE,-
    MLIST_REMOVE_MESSAGE.TXT,-
    RELEASE_NOTES.SDML,-
    MXCONFIG.COM,-
    MX_CREATE_CONFIG_DATABASE.COM,-
    MX_DNSMTP.COM,-
    MX_EXAMPLES_LIST.TXT,-
    MX_FILE_LIST.TXT,-
    MX_FLQ_MGR.COM,-
    MX_LOCAL.COM,-
    MX_MLF.COM,-
    MX_MLIST_LIST.TXT,-
    MX_ROUTER.COM,-
    MX_SITE.COM,-
    MX_SMTP.COM,-
    MX_START.COM,-
    MX___STARTUP.COM,-
    PROCESS_HOLDING_QUEUE.COM,-
    SMTP_SERVER.COM,-
    ZIPNOTE.TXT

!
! MX Kit lettering...
!
!  A = KITINSTAL, startup procedures
!  B = Alpha base images
!  C = IA64 base images
!  D = VAX base images
!  E = Alpha xSMTP
!  F = IA64 xSMTP images
!  G = VAX xSMTP images
!  H = Alpha SITE & MLF images
!  I = IA64 SITE & MLF images
!  J = VAX SITE & MLF images
!  K = Common SITE & MLF stuff
!  L = Documentation
!  M = Example files
!

KIT : $(DEV)$(KITNAME).A,$(DEV)$(KITNAME).B,$(DEV)$(KITNAME).C,$(DEV)$(KITNAME).D,$(DEV)$(KITNAME).E,-
    	$(DEV)$(KITNAME).F,$(DEV)$(KITNAME).G,$(DEV)$(KITNAME).H,$(DEV)$(KITNAME).I,$(DEV)$(KITNAME).J,-
    	$(DEV)$(KITNAME).K,$(DEV)$(KITNAME).L,$(DEV)$(KITNAME).M
    @ write sys$output "MX kit build complete"

MAINKIT : $(DEV)$(KITNAME).A
    @ write sys$output "MX KITINSTAL package build complete"

AXPKIT : $(DEV)$(KITNAME).B,$(DEV)$(KITNAME).E,$(DEV)$(KITNAME).H,-
    	 $(DEV)$(KITNAME).K,$(DEV)$(KITNAME).M
    @ write sys$output "MX Alpha kit build complete"

I64KIT : $(DEV)$(KITNAME).C,$(DEV)$(KITNAME).F,$(DEV)$(KITNAME).I,-
    	 $(DEV)$(KITNAME).K,$(DEV)$(KITNAME).M
    @ write sys$output "MX IA64 kit build complete"

VAXKIT : $(DEV)$(KITNAME).D,$(DEV)$(KITNAME).G,$(DEV)$(KITNAME).J,-
	 $(DEV)$(KITNAME).K,$(DEV)$(KITNAME).M
    @ write sys$output "MX VAX kit build complete"

DOCKIT : $(DEV)$(KITNAME).L
    @ write sys$output "MX Documentation kit build complete"

$(KITDIR)MX_INSTALLING_VERSION.DAT : MG_BIN:[$(MX_TOP).MCP]MCP.EXE, MG_BIN:[$(MX_TOP).COMMON]MX_SHR.EXE
    DEFINE/USER MX_SHR MG_BIN:[$(MX_TOP).COMMON]MX_SHR
    DEFINE/USER MX_FLQ_SHR MG_BIN:[$(MX_TOP).FLQ]MX_FLQ_SHR
    MCR MG_BIN:[$(MX_TOP).MCP]MCP/NOFILE SHOW VERSION/OUTPUT=$(MMS$TARGET)
    PURGE/NOLOG $(MMS$TARGET)

$(KITDIR)VERSION.OPT	    : $(MX_SRCTOP)VERSION.OPT
    COPY $(MX_SRCTOP)VERSION.OPT $(MMS$TARGET)

$(KITDIR)$(KITNAME).RELEASE_NOTES : $(SRCDIR)RELEASE_NOTES.SDML,MG_SRC:[$(MX_TOP).DOC]SYMBOLS.SDML,-
                                    MG_SRC:[$(MX_TOP).DOC]COPYRIGHT.SDML,MG_ETC:[$(MX_TOP).DOC]DYNAMIC_SYMBOLS.SDML
    @ old_default = F$ENVIRONMENT ("DEFAULT")
    @ set default MG_SRC:[$(MX_TOP).DOC]
    DOCUMENT/DEVICE=BLANK_PAGES/SYMBOLS=MG_ETC:[$(MX_TOP).DOC]DYNAMIC_SYMBOLS.SDML -
    	 $(MMS$SOURCE) SOFTWARE.REFERENCE MAIL/CONTENTS/OUTPUT=$(MMS$TARGET)
    @ set default 'old_default'

$(DEV)$(KITNAME).A : KITINSTAL.COM,$(KITDIR)$(KITNAME).RELEASE_NOTES,$(KITDIR)MX_INSTALLING_VERSION.DAT,-
    	    	     $(KITDIR)VERSION.OPT,MG_KIT:[$(MX_TOP).ALIAS]MX_ALIAS_HELPLIB.HLB,-
    	    	     MG_KIT:[$(MX_TOP).ALIAS]MXALIAS_MAIN.HLP,MG_KIT:[$(MX_TOP).MCP]MX_MCP_HELPLIB.HLB,-
    	    	     MG_KIT:[$(MX_TOP).MCP]MX_REJMAN_HELPLIB.HLB,-
    	    	     $(SRCDIR)MX___STARTUP.COM,MX_START.COM,-
    	    	     MX_FILE_LIST.TXT,MXCONFIG.COM,MX_SITE.COM,MX_FLQ_MGR.COM,-
    	    	     MX_CREATE_CONFIG_DATABASE.COM,SMTP_SERVER.COM,MX_LOCAL.COM,-
    	    	     MX_SMTP.COM,MX_DNSMTP.COM,MX_MLF.COM,MX_ROUTER.COM,-
    	    	     PROCESS_HOLDING_QUEUE.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    SET PROTECTION=W:RE $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

!!!
! N.B.:
! BASE_EXES 1 & 2 are world-readable
! BASE_EXES 3 & 4 are system-only
!!!

AXP_BASE_EXES1 =    MG_BIN_AXP:[$(MX_TOP).COMMON]MX_SHR.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).FLQ]MX_FLQ_SHR.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).COMMON]MX_MSG.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).MCP]MAILQUEUE.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).COMMON]MX_SMTP_MSG.EXE

AXP_BASE_EXES2 =    MG_BIN_AXP:[$(MX_TOP).LOCAL]MX_DECODE.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).MAILSHR]MX_MAILSHR.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).MAILSHR]MX_MAILSHRP.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).ALIAS]MXALIAS.EXE

AXP_BASE_EXES3 =    MG_BIN_AXP:[$(MX_TOP).MCP]MCP.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).MCP]REJMAN.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).ROUTER]MX_ROUTER.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).ROUTER]MX_FLQ_MGR.EXE
    	    	    
AXP_BASE_EXES4 =    MG_BIN_AXP:[$(MX_TOP).LOCAL]MX_LOCAL.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).MLFAKE]MLFAKE.EXE

AXP_BASE_EXES =	    $(AXP_BASE_EXES1), $(AXP_BASE_EXES2), $(AXP_BASE_EXES3), $(AXP_BASE_EXES4)

I64_BASE_EXES1 =    MG_BIN_I64:[$(MX_TOP).COMMON]MX_SHR.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).FLQ]MX_FLQ_SHR.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).COMMON]MX_MSG.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).MCP]MAILQUEUE.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).COMMON]MX_SMTP_MSG.EXE

I64_BASE_EXES2 =    MG_BIN_I64:[$(MX_TOP).LOCAL]MX_DECODE.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).MAILSHR]MX_MAILSHR.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).MAILSHR]MX_MAILSHRP.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).ALIAS]MXALIAS.EXE

I64_BASE_EXES3 =    MG_BIN_I64:[$(MX_TOP).MCP]MCP.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).MCP]REJMAN.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).ROUTER]MX_ROUTER.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).ROUTER]MX_FLQ_MGR.EXE
    	    	    
I64_BASE_EXES4 =    MG_BIN_I64:[$(MX_TOP).LOCAL]MX_LOCAL.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).MLFAKE]MLFAKE.EXE

I64_BASE_EXES =	    $(I64_BASE_EXES1), $(I64_BASE_EXES2), $(I64_BASE_EXES3), $(I64_BASE_EXES4)

VAX_BASE_EXES1 =    MG_BIN_VAX:[$(MX_TOP).COMMON]MX_SHR.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).FLQ]MX_FLQ_SHR.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).COMMON]MX_MSG.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).MCP]MAILQUEUE.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).COMMON]MX_SMTP_MSG.EXE

VAX_BASE_EXES2 =    MG_BIN_VAX:[$(MX_TOP).LOCAL]MX_DECODE.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).MAILSHR]MX_MAILSHR.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).MAILSHR]MX_MAILSHRP.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).ALIAS]MXALIAS.EXE

VAX_BASE_EXES3 =    MG_BIN_VAX:[$(MX_TOP).MCP]MCP.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).MCP]REJMAN.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).ROUTER]MX_ROUTER.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).ROUTER]MX_FLQ_MGR.EXE
    	    	    
VAX_BASE_EXES4 =    MG_BIN_VAX:[$(MX_TOP).LOCAL]MX_LOCAL.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).MLFAKE]MLFAKE.EXE

VAX_BASE_EXES =	    $(VAX_BASE_EXES1), $(VAX_BASE_EXES2), $(VAX_BASE_EXES3), $(VAX_BASE_EXES4)

$(ETCDIR)MX_BASE_IMAGES_ALPHA.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_BASE_EXES1)" "[ALPHA_EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_BASE_EXES2)" "[ALPHA_EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_BASE_EXES3)" "[ALPHA_EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_BASE_EXES4)" "[ALPHA_EXE]"

$(ETCDIR)MX_BASE_FIXUPS_ALPHA.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_BASE_EXES1)" "(S:RWED,O:RWED,G:RE,W:RE)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_BASE_EXES2)" "(S:RWED,O:RWED,G:RE,W:RE)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_BASE_EXES3)" "(S:RWED,O:RWED,G:RE,W)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_BASE_EXES4)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).B : $(AXP_BASE_EXES),$(ETCDIR)MX_BASE_IMAGES_ALPHA.TXT,$(ETCDIR)MX_BASE_FIXUPS_ALPHA.COM
  @ old_default = F$ENVIRONMENT ("DEFAULT")
  @ SET DEFAULT MG_KIT:[$(MX_TOP).KIT]
  @ CREATE/DIRECTORY/PROTECT=O:RWED [.$(KITNAME)_B]
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) [.$(KITNAME)_B]/OWNER=PARENT
    SET PROT=W:RE [.$(KITNAME)_B]*.*
    $(BACKUP) [.$(KITNAME)_B]*.*; $(MMS$TARGET)$(DEVQ)
  @ DELETE [.$(KITNAME)_B]*.*;*,[]$(KITNAME)_B.DIR;
  @ SET DEFAULT 'old_default'

$(ETCDIR)MX_BASE_IMAGES_IA64.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_BASE_EXES1)" "[IA64_EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_BASE_EXES2)" "[IA64_EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_BASE_EXES3)" "[IA64_EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_BASE_EXES4)" "[IA64_EXE]"

$(ETCDIR)MX_BASE_FIXUPS_IA64.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_BASE_EXES1)" "(S:RWED,O:RWED,G:RE,W:RE)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_BASE_EXES2)" "(S:RWED,O:RWED,G:RE,W:RE)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_BASE_EXES3)" "(S:RWED,O:RWED,G:RE,W)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_BASE_EXES4)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).C : $(I64_BASE_EXES),$(ETCDIR)MX_BASE_IMAGES_IA64.TXT,$(ETCDIR)MX_BASE_FIXUPS_IA64.COM
  @ old_default = F$ENVIRONMENT ("DEFAULT")
  @ SET DEFAULT MG_KIT:[$(MX_TOP).KIT]
  @ CREATE/DIRECTORY/PROTECT=O:RWED [.$(KITNAME)_C]
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) [.$(KITNAME)_C]/OWNER=PARENT
    SET PROT=W:RE [.$(KITNAME)_C]*.*
    $(BACKUP) [.$(KITNAME)_C]*.*; $(MMS$TARGET)$(DEVQ)
  @ DELETE [.$(KITNAME)_C]*.*;*,[]$(KITNAME)_C.DIR;
  @ SET DEFAULT 'old_default'

$(ETCDIR)MX_BASE_IMAGES_VAX.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_BASE_EXES1)" "[EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_BASE_EXES2)" "[EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_BASE_EXES3)" "[EXE]"
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_BASE_EXES4)" "[EXE]"

$(ETCDIR)MX_BASE_FIXUPS_VAX.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_BASE_EXES1)" "(S:RWED,O:RWED,G:RE,W:RE)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_BASE_EXES2)" "(S:RWED,O:RWED,G:RE,W:RE)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_BASE_EXES3)" "(S:RWED,O:RWED,G:RE,W)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_BASE_EXES4)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).D : $(VAX_BASE_EXES),$(ETCDIR)MX_BASE_IMAGES_VAX.TXT,$(ETCDIR)MX_BASE_FIXUPS_VAX.COM
  @ old_default = F$ENVIRONMENT ("DEFAULT")
  @ SET DEFAULT MG_KIT:[$(MX_TOP).KIT]
  @ CREATE/DIRECTORY/PROTECT=O:RWED [.$(KITNAME)_D]
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) [.$(KITNAME)_D]/OWNER=PARENT
    SET PROT=W:RE [.$(KITNAME)_D]*.*
    $(BACKUP) [.$(KITNAME)_D]*.*; $(MMS$TARGET)$(DEVQ)
  @ DELETE [.$(KITNAME)_D]*.*;*,[]$(KITNAME)_D.DIR;
  @ SET DEFAULT 'old_default'

AXP_SMTP_EXES =	    MG_BIN_AXP:[$(MX_TOP).SMTP]MX_SMTP.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).SMTP]SMTP_SERVER.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).SMTP]DOMAIN_EXPANSION.EXE

AXP_DNSMTP_EXES =   MG_BIN_AXP:[$(MX_TOP).SMTP]MX_DNSMTP.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).SMTP]DNSMTP_SERVER.EXE

I64_SMTP_EXES =	    MG_BIN_I64:[$(MX_TOP).SMTP]MX_SMTP.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).SMTP]SMTP_SERVER.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).SMTP]DOMAIN_EXPANSION.EXE

I64_DNSMTP_EXES =   MG_BIN_I64:[$(MX_TOP).SMTP]MX_DNSMTP.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).SMTP]DNSMTP_SERVER.EXE

VAX_SMTP_EXES =	    MG_BIN_VAX:[$(MX_TOP).SMTP]MX_SMTP.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).SMTP]SMTP_SERVER.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).SMTP]DOMAIN_EXPANSION.EXE

VAX_DNSMTP_EXES =   MG_BIN_VAX:[$(MX_TOP).SMTP]MX_DNSMTP.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).SMTP]DNSMTP_SERVER.EXE

$(ETCDIR)MX_SMTP_IMAGES_ALPHA.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_SMTP_EXES)" "[ALPHA_EXE]"

$(ETCDIR)MX_DNSMTP_IMAGES_ALPHA.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_DNSMTP_EXES)" "[ALPHA_EXE]"

$(ETCDIR)MX_SMTP_FIXUPS_ALPHA.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_SMTP_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(ETCDIR)MX_DNSMTP_FIXUPS_ALPHA.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_DNSMTP_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).E : $(AXP_SMTP_EXES),$(AXP_DNSMTP_EXES),-
    	    	     $(ETCDIR)MX_SMTP_IMAGES_ALPHA.TXT,$(ETCDIR)MX_SMTP_FIXUPS_ALPHA.COM,-
    	    	     $(ETCDIR)MX_DNSMTP_IMAGES_ALPHA.TXT,$(ETCDIR)MX_DNSMTP_FIXUPS_ALPHA.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

$(ETCDIR)MX_SMTP_IMAGES_IA64.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_SMTP_EXES)" "[IA64_EXE]"

$(ETCDIR)MX_DNSMTP_IMAGES_IA64.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_DNSMTP_EXES)" "[IA64_EXE]"

$(ETCDIR)MX_SMTP_FIXUPS_IA64.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_SMTP_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(ETCDIR)MX_DNSMTP_FIXUPS_IA64.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_DNSMTP_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).F : $(I64_SMTP_EXES),$(I64_DNSMTP_EXES),-
    	    	     $(ETCDIR)MX_SMTP_IMAGES_IA64.TXT,$(ETCDIR)MX_SMTP_FIXUPS_IA64.COM,-
    	    	     $(ETCDIR)MX_DNSMTP_IMAGES_IA64.TXT,$(ETCDIR)MX_DNSMTP_FIXUPS_IA64.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

$(ETCDIR)MX_SMTP_IMAGES_VAX.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_SMTP_EXES)" "[EXE]"

$(ETCDIR)MX_DNSMTP_IMAGES_VAX.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_DNSMTP_EXES)" "[EXE]"

$(ETCDIR)MX_SMTP_FIXUPS_VAX.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_SMTP_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(ETCDIR)MX_DNSMTP_FIXUPS_VAX.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_DNSMTP_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).G : $(VAX_SMTP_EXES),$(VAX_DNSMTP_EXES),-
    	    	     $(ETCDIR)MX_SMTP_IMAGES_VAX.TXT,$(ETCDIR)MX_SMTP_FIXUPS_VAX.COM,-
    	    	     $(ETCDIR)MX_DNSMTP_IMAGES_VAX.TXT,$(ETCDIR)MX_DNSMTP_FIXUPS_VAX.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

AXP_SITE_EXES	=   MG_BIN_AXP:[$(MX_TOP).SITE]MX_SITE.EXE,-
    	    	    MG_BIN_AXP:[$(MX_TOP).SITE]MX_SITE_IN.EXE

AXP_MLF_EXES	=   MG_BIN_AXP:[$(MX_TOP).MLF]MX_MLF.EXE

I64_SITE_EXES	=   MG_BIN_I64:[$(MX_TOP).SITE]MX_SITE.EXE,-
    	    	    MG_BIN_I64:[$(MX_TOP).SITE]MX_SITE_IN.EXE

I64_MLF_EXES	=   MG_BIN_I64:[$(MX_TOP).MLF]MX_MLF.EXE

VAX_SITE_EXES	=   MG_BIN_VAX:[$(MX_TOP).SITE]MX_SITE.EXE,-
    	    	    MG_BIN_VAX:[$(MX_TOP).SITE]MX_SITE_IN.EXE

VAX_MLF_EXES	=   MG_BIN_VAX:[$(MX_TOP).MLF]MX_MLF.EXE

$(ETCDIR)MX_SITE_IMAGES_ALPHA.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_SITE_EXES)" "[ALPHA_EXE]"

$(ETCDIR)MX_SITE_FIXUPS_ALPHA.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_SITE_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(ETCDIR)MX_MLF_IMAGES_ALPHA.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(AXP_MLF_EXES)" "[ALPHA_EXE]"

$(ETCDIR)MX_MLF_FIXUPS_ALPHA.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(AXP_MLF_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).H : $(AXP_SITE_EXES),$(AXP_MLF_EXES),-
    	    	     $(ETCDIR)MX_SITE_IMAGES_ALPHA.TXT,$(ETCDIR)MX_SITE_FIXUPS_ALPHA.COM,-
    	    	     $(ETCDIR)MX_MLF_IMAGES_ALPHA.TXT,$(ETCDIR)MX_MLF_FIXUPS_ALPHA.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

$(ETCDIR)MX_SITE_IMAGES_IA64.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_SITE_EXES)" "[IA64_EXE]"

$(ETCDIR)MX_SITE_FIXUPS_IA64.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_SITE_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(ETCDIR)MX_MLF_IMAGES_IA64.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(I64_MLF_EXES)" "[IA64_EXE]"

$(ETCDIR)MX_MLF_FIXUPS_IA64.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(I64_MLF_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).I : $(I64_SITE_EXES),$(I64_MLF_EXES),-
    	    	     $(ETCDIR)MX_SITE_IMAGES_IA64.TXT,$(ETCDIR)MX_SITE_FIXUPS_IA64.COM,-
    	    	     $(ETCDIR)MX_MLF_IMAGES_IA64.TXT,$(ETCDIR)MX_MLF_FIXUPS_IA64.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

$(ETCDIR)MX_SITE_IMAGES_VAX.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_SITE_EXES)" "[EXE]"

$(ETCDIR)MX_SITE_FIXUPS_VAX.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_SITE_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(ETCDIR)MX_MLF_IMAGES_VAX.TXT : MAKE_IMAGE_LIST.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_IMAGE_LIST $(MMS$TARGET) "$(VAX_MLF_EXES)" "[EXE]"

$(ETCDIR)MX_MLF_FIXUPS_VAX.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(VAX_MLF_EXES)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).J : $(VAX_SITE_EXES),$(VAX_MLF_EXES),-
    	    	     $(ETCDIR)MX_SITE_IMAGES_VAX.TXT,$(ETCDIR)MX_SITE_FIXUPS_VAX.COM,-
    	    	     $(ETCDIR)MX_MLF_IMAGES_VAX.TXT,$(ETCDIR)MX_MLF_FIXUPS_VAX.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

MLF_FILES1 = 	FILESERV_HELP.TXT,MLIST_ADD_MESSAGE.TXT,-
    	    	MLIST_REMOVE_MESSAGE.TXT,MLIST_FORWARD_MESSAGE.TXT,-
    	    	MLIST_HELP.TXT,MLIST_CONFIRM_MESSAGE.TXT,-
                MLIST_CONFIRM_MESSAGE.TEMPLATE,MLIST_ADD_MESSAGE.TEMPLATE
MLF_FILES2 = 	MLIST_REMOVE_MESSAGE.TEMPLATE,MLIST_FORWARD_MESSAGE.TEMPLATE,-
    	    	MLIST_HELP.TEMPLATE,MX_MLIST_LIST.TXT,-
    	    	MLF_CONFIG.COM
MLF_FILES  =    $(MLF_FILES1),$(MLF_FILES2)

$(ETCDIR)MX_MLF_FILE_FIXUPS.COM : MAKE_FIXUPS.COM, ALWAYS_MAKE
    -@ DELETE/NOLOG $(MMS$TARGET);*
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(MLF_FILES1)" "(S:RWED,O:RWED,G:RE,W)"
    @ @MAKE_FIXUPS $(MMS$TARGET) "$(MLF_FILES2)" "(S:RWED,O:RWED,G:RE,W)"

$(DEV)$(KITNAME).K :  $(MLF_FILES),$(ETCDIR)MX_MLF_FILE_FIXUPS.COM
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

PS_DOCFILES   = MG_KIT:[$(MX_TOP).DOC]MX_INSTALL_GUIDE.PS, MG_KIT:[$(MX_TOP).DOC]MX_MGMT_GUIDE.PS,-
    	        MG_KIT:[$(MX_TOP).DOC]MX_MLF_GUIDE.PS, MG_KIT:[$(MX_TOP).DOC]MX_PROG_GUIDE.PS,-
    	        MG_KIT:[$(MX_TOP).DOC]MX_USER_GUIDE.PS

TXT_DOCFILES  = $(PS_DOCFILES:.PS=.TXT)

PDF_DOCFILES = $(PS_DOCFILES:.PS=.PDF)

HTML_DOCFILES = MG_KIT:[$(MX_TOP).DOC]INDEX.HTML,-
                MG_KIT:[$(MX_TOP).DOC]MX_INSTALL_GUIDE.HTML,MG_KIT:[$(MX_TOP).DOC]MX_INSTALL_GUIDE_CONTENTS.HTML,-
                MG_KIT:[$(MX_TOP).DOC]MX_MGMT_GUIDE.HTML,MG_KIT:[$(MX_TOP).DOC]MX_MGMT_GUIDE_CONTENTS.HTML,-
                MG_KIT:[$(MX_TOP).DOC]MX_MGMT_GUIDE_INDEX.HTML,-
    	        MG_KIT:[$(MX_TOP).DOC]MX_MLF_GUIDE.HTML, MG_KIT:[$(MX_TOP).DOC]MX_MLF_GUIDE_CONTENTS.HTML,-
                MG_KIT:[$(MX_TOP).DOC]MX_PROG_GUIDE.HTML,MG_KIT:[$(MX_TOP).DOC]MX_PROG_GUIDE_CONTENTS.HTML,-
    	        MG_KIT:[$(MX_TOP).DOC]MX_USER_GUIDE.HTML,MG_KIT:[$(MX_TOP).DOC]MX_USER_GUIDE_CONTENTS.HTML

$(DEV)$(KITNAME).L : $(ETCDIR)MX_DOC_LIST.TXT,$(PS_DOCFILES),$(PDF_DOCFILES),$(TXT_DOCFILES),$(HTML_DOCFILES)
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    SET PROTECTION=W:RE $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

$(ETCDIR)MX_DOC_LIST.TXT : MAKE_MX_DOC_LIST.COM
	@MAKE_MX_DOC_LIST.COM MG_KIT:[$(MX_TOP).DOC] $(MMS$TARGET)

EXAMPLE_FILES1 = MX_EXAMPLES_LIST.TXT,[$(MX_TOP).EXAMPLES]NAME_CONVERSION.C,-
    	[$(MX_TOP).EXAMPLES]NAME_CONVERSION.B32,[$(MX_TOP).EXAMPLES]NAME_CONVERSION.MAR,-
    	[$(MX_TOP).EXAMPLES]00README.NAME_CONVERSION,-
    	[$(MX_TOP).EXAMPLES]ADDRESS_REWRITER.B32,[$(MX_TOP).EXAMPLES]ADDRESS_REWRITER.MMS,-
	[$(MX_TOP).EXAMPLES]ADDRESS_REWRITER.ZIP,[$(MX_TOP).EXAMPLES]MX_HDR.H,-
	[$(MX_TOP).EXAMPLES]CHARCONV_EXAMPLE.C,[$(MX_TOP).EXAMPLES]CHARCONV_EXAMPLE_README.TXT
EXAMPLE_FILES2 = [$(MX_TOP).EXAMPLES]CHARCONV_KANJI.C,[$(MX_TOP).EXAMPLES]CHARCONV_KANJI_README.TXT,-
	[$(MX_TOP).EXAMPLES]FILTER.C, [$(MX_TOP).EXAMPLES]MX_FILTERDEF.H,-
	[$(MX_TOP).EXAMPLES]MX_FILTERDEF.R32,[$(MX_TOP).EXAMPLES]LOCAL_NET_CHECK.C,-
    	[$(MX_TOP).EXAMPLES]AUTH_CALLOUT_EXAMPLE.C,[$(MX_TOP).EXAMPLES]VIRTDOM.ZIP,-
    	[$(MX_TOP).EXAMPLES]ACCESS_CHECK_EXAMPLE.C,[$(MX_TOP).EXAMPLES]ACCESS_CHECK.ZIP
EXAMPLE_FILES = $(EXAMPLE_FILES1),$(EXAMPLE_FILES2)

$(DEV)$(KITNAME).M : $(EXAMPLE_FILES)
    - PURGE/NOLOG $(MMS$SOURCE_LIST)
    SET PROTECTION=W:RE $(MMS$SOURCE_LIST)
    $(BACKUP) $(MMS$SOURCE_LIST) $(MMS$TARGET)$(DEVQ)

ZIPFILE : $(KITDIR)$(KITNAME).ZIP
    @ !

$(KITDIR)$(KITNAME).ZIP : COMPRESS_OLBS.COM,$(KITDIR)AAAREADME.TXT,-
	$(KITDIR)$(KITNAME).A,$(KITDIR)$(KITNAME).B,$(KITDIR)$(KITNAME).C,$(KITDIR)$(KITNAME).D,$(KITDIR)$(KITNAME).E,-
    	$(KITDIR)$(KITNAME).F,$(KITDIR)$(KITNAME).G,$(KITDIR)$(KITNAME).H,$(KITDIR)$(KITNAME).I,$(KITDIR)$(KITNAME).J,-
    	$(KITDIR)$(KITNAME).K,$(KITDIR)$(KITNAME).L,$(KITDIR)$(KITNAME).M,-
	$(KITDIR)$(KITNAME).RELEASE_NOTES,$(KITDIR)ZIPNOTE.TXT
        if f$search("$(MMS$TARGET)").nes."" then DELETE/NOLOG $(MMS$TARGET);*
        ZIP/VMS/JUNK $(MMS$TARGET) $(KITDIR)aaareadme.txt,$(KITDIR)$(kitname).*
        @ define/user sys$input $(KITDIR)zipnote.txt
        @ write sys$output "Adding Zip comment"
        zipnote -w $(MMS$TARGET)
        !$(KITDIR)$(KITNAME).ZIP built

$(KITDIR)ZIPNOTE.TXT	: ZIPNOTE.TXT, MAKE_ZIPNOTE.COM, $(MX_SRCTOP)VERSION.OPT
    @MAKE_ZIPNOTE ZIPNOTE.TXT  $(MX_SRCTOP)VERSION.OPT $(MMS$TARGET)
$(KITDIR)AAAREADME.TXT	: AAAREADME.TXT, MAKE_README.COM, $(MX_SRCTOP)VERSION.OPT
    @MAKE_README AAAREADME.TXT  $(MX_SRCTOP)VERSION.OPT $(MMS$TARGET)

COMPRESS_OLBS :
	@$(SRCDIR)COMPRESS_OLBS.COM
